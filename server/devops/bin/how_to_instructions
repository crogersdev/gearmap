## prep

make sure there is a /data folder
make sure there is a /gearmap folder
make sure there is a /data/gearmap_db folder
chmod 755 /data/gearmap_db
create conda env; conda create -n gearmap_api && conda install --file devops/conda_env.yaml
create the gearmap_api_db container:
    python3 /gearmap/devops/src/db_setup/create_dev_db_container.py
create db items; tables, etc...:
    conda activate gearmap_api
    export PYTHONPATH=$PYTHONPATH:/gearmap/server/devops/src/py:/gearmap/server/devops/src/db_setup:/gearmap/server/src/py/api:/gearmap/server/src/py/:/gearmap/server/src/tests:/gearmap/server/common/src/py
    python3 /gearmap/devops/src/py/GearmapDbBase.py
    python3 /gearmap/devops/src/db_setup/put_conferences_in_db.py
    python3 /gearmap/devops/src/db_setup/put_schools_in_db.py
put fake data in there (optional):
    python3 /gearmap/src/tests/populate_db_with_random_observations.py

## running dev servers
# make sure docker daemon is running and then 
gearmap_api:
    docker run -d --name gearmap_api -p 5001:5001 -v /gearmap:/gearmap gearmap_api:1.0
    docker start gearmap_api_db
gearmap_ui:
    npm start  (may have to brew update and brew cleanup if macosx)

## connect to local dev instance of db
todo - fill me in

## run unit|integration tests
cd /gearmap
conda activate gearmap (or gearmap_api)
export PYTHONPATH as above
export GEARMAP_INTEGRATION_TEST_DBHOST=<ip addr of gearmap db host>
pytest -s -x src/tests/integration/test_api_impl_methods.py -k <some test>

## destroy and recreate the db
python3 /gearmap/devops/src/db_setup/drop_all_data_from_db.py <which_env>

## do this one \/ if you want to need to drop the db container
python3 /gearmap/devops/src/db_setup/destroy_dev_db_container.py
